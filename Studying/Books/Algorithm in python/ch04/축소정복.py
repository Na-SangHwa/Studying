# -*- coding: utf-8 -*-
"""0404축소정복.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1beK6bwzYX-1mc-3uJDtkY55q_Oymvln2
"""

def kth_smallest_sort(A,k):
  A.sort()
  return A[k-1]

def quick_select(A,left,right,k):
  
  pos=partition(A,left,right)
  if(pos+1==left+k):
    return A[pos]
  elif (pos+1>left+k):
    return quick_select(A,left,pos-1,k)
  else:
    return quick_select(A,pos+1,right,k-(pos+1-left))

def partition(A,left,right):
  low=left+1
  high=right
  pivot=right
  pivot=A[left]
  while(low<=high):
    while low<=right and A[low]<pivot : low+=1
    while low>=left and A[high]>pivot : high-=1
    if low<high:
      A[low],A[high]=A[high],A[low]
  A[left],A[high]=A[high],A[low]
  return high

array=[12,3,5,7,4,19,26,23,15]
n=len(array)
print("입력리스트 ",array)
print("정렬 3번째 작은수 ",kth_smallest_sort(array,3))
print("정렬 6번째 작은수 ",kth_smallest_sort(array,6))
print("축소 6번째 작은수 ",quick_select(array,0,n-1,6))
print("축소 3번째 작은수 ",quick_select(array,0,n-1,3))

